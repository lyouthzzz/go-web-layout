// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/order/order.go

// Package order is a generated GoMock package.
package order

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	order "github.com/lyouthzzz/go-web-layout/internal/domain/order"
)

// MockIOrderClient is a mock of IOrderClient interface.
type MockIOrderClient struct {
	ctrl     *gomock.Controller
	recorder *MockIOrderClientMockRecorder
}

// MockIOrderClientMockRecorder is the mock recorder for MockIOrderClient.
type MockIOrderClientMockRecorder struct {
	mock *MockIOrderClient
}

// NewMockIOrderClient creates a new mock instance.
func NewMockIOrderClient(ctrl *gomock.Controller) *MockIOrderClient {
	mock := &MockIOrderClient{ctrl: ctrl}
	mock.recorder = &MockIOrderClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOrderClient) EXPECT() *MockIOrderClientMockRecorder {
	return m.recorder
}

// GetOrder mocks base method.
func (m *MockIOrderClient) GetOrder(arg0 context.Context, arg1 uint) (*order.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", arg0, arg1)
	ret0, _ := ret[0].(*order.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockIOrderClientMockRecorder) GetOrder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockIOrderClient)(nil).GetOrder), arg0, arg1)
}
